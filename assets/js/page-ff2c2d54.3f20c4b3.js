(window.webpackJsonp=window.webpackJsonp||[]).push([[720],{1008:function(t,r,e){"use strict";e.r(r);var o=e(25),a=Object(o.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("//"),e("RouterLink",{attrs:{to:"/reference/beatwalls/"}},[t._v("beatwalls")]),t._v("/"),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/"}},[t._v("structure")]),t._v("/"),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/"}},[t._v("ObjectStructure")])],1),t._v(" "),e("h1",{attrs:{id:"objectstructure"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#objectstructure"}},[t._v("#")]),t._v(" ObjectStructure")]),t._v(" "),e("p",[t._v("[JVM]")]),t._v(" "),e("p",[t._v("A Object Structure can be applied on Obstacles and Notes alike.")]),t._v(" "),e("p",[t._v("abstract class "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/"}},[t._v("ObjectStructure")]),t._v(" : "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-structure/"}},[t._v("Structure")])],1),t._v(" "),e("h2",{attrs:{id:"constructors"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#constructors"}},[t._v("#")]),t._v(" Constructors")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Name")]),t._v(" "),e("th",[t._v("Summary")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/-object-structure.html"}},[t._v("ObjectStructure")])],1),t._v(" "),e("td",[t._v("[JVM] fun "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/-object-structure.html"}},[t._v("ObjectStructure")]),t._v("()   "),e("br")],1)])])]),t._v(" "),e("h2",{attrs:{id:"functions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#functions"}},[t._v("#")]),t._v(" Functions")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Name")]),t._v(" "),e("th",[t._v("Summary")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/create-objects.html"}},[t._v("createObjects")])],1),t._v(" "),e("td",[t._v("[JVM]  "),e("br"),t._v("Content  "),e("br"),t._v("abstract fun "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/create-objects.html"}},[t._v("createObjects")]),t._v("(): "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-list/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("List"),e("OutboundLink")],1),t._v("<"),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure.bwElements/-bw-object/"}},[t._v("BwObject")]),t._v(">  "),e("br"),e("br"),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/equals.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("equals"),e("OutboundLink")],1)]),t._v(" "),e("td",[t._v("[JVM]  "),e("br"),t._v("Content  "),e("br"),t._v("open operator override fun "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/equals.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("equals"),e("OutboundLink")],1),t._v("(other: "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Any"),e("OutboundLink")],1),t._v("?): "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Boolean"),e("OutboundLink")],1),t._v(" "),e("br"),e("br"),e("br")])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/hash-code.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("hashCode"),e("OutboundLink")],1)]),t._v(" "),e("td",[t._v("[JVM]  "),e("br"),t._v("Content  "),e("br"),t._v("open override fun "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/hash-code.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("hashCode"),e("OutboundLink")],1),t._v("(): "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Int"),e("OutboundLink")],1),t._v(" "),e("br"),e("br"),e("br")])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/to-string.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("toString"),e("OutboundLink")],1)]),t._v(" "),e("td",[t._v("[JVM]  "),e("br"),t._v("Content  "),e("br"),t._v("open override fun "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/to-string.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("toString"),e("OutboundLink")],1),t._v("(): "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("String"),e("OutboundLink")],1),t._v(" "),e("br"),e("br"),e("br")])])])]),t._v(" "),e("h2",{attrs:{id:"properties"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[t._v("#")]),t._v(" Properties")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Name")]),t._v(" "),e("th",[t._v("Summary")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/addDuration/#/PointingToDeclaration/"}},[t._v("addDuration")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("adds the given Value. Random possible with random(min,max). Default: null (does nothing)"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/addDuration/#/PointingToDeclaration/"}},[t._v("addDuration")]),t._v(": () -> "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Double"),e("OutboundLink")],1),t._v(" "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/addHeight/#/PointingToDeclaration/"}},[t._v("addHeight")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("adds the given Value. Random possible with random(min,max). Default: null (does nothing)"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/addHeight/#/PointingToDeclaration/"}},[t._v("addHeight")]),t._v(": () -> "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Double"),e("OutboundLink")],1),t._v(" "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/addWidth/#/PointingToDeclaration/"}},[t._v("addWidth")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("adds the given Value. Random possible with random(min,max). Default: null (does nothing)"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/addWidth/#/PointingToDeclaration/"}},[t._v("addWidth")]),t._v(": () -> "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Double"),e("OutboundLink")],1),t._v(" "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/addX/#/PointingToDeclaration/"}},[t._v("addX")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("adds the given Value. Random possible with random(min,max). Default: null (does nothing)"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/addX/#/PointingToDeclaration/"}},[t._v("addX")]),t._v(": () -> "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Double"),e("OutboundLink")],1),t._v(" "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/addY/#/PointingToDeclaration/"}},[t._v("addY")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("adds the given Value. Random possible with random(min,max). Default: null (does nothing)"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/addY/#/PointingToDeclaration/"}},[t._v("addY")]),t._v(": () -> "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Double"),e("OutboundLink")],1),t._v(" "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/addZ/#/PointingToDeclaration/"}},[t._v("addZ")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("adds the given Value. Random possible with random(min,max). Default: null (does nothing)"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/addZ/#/PointingToDeclaration/"}},[t._v("addZ")]),t._v(": () -> "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Double"),e("OutboundLink")],1),t._v(" "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/b/#/PointingToDeclaration/"}},[t._v("b")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("alias for beat, since i hate typing"),e("br"),e("br"),t._v("override var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/b/#/PointingToDeclaration/"}},[t._v("b")]),t._v(": () -> "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Double"),e("OutboundLink")],1),t._v(" "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/beat/#/PointingToDeclaration/"}},[t._v("beat")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),e("br"),e("br"),t._v("Beat the of the structure in the map. This takes BPM changes into account example:"),e("br"),e("br"),t._v("beat = 10  "),e("br"),t._v("alias:  "),e("br"),t._v("b = 10"),e("br"),e("br"),t._v("override var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/beat/#/PointingToDeclaration/"}},[t._v("beat")]),t._v(": () -> "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Double"),e("OutboundLink")],1),t._v(" "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/changeDuration/#/PointingToDeclaration/"}},[t._v("changeDuration")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("change The Duration of all Walls in the structure to the given Value. Random possible with random(min,max). Default: null"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/changeDuration/#/PointingToDeclaration/"}},[t._v("changeDuration")]),t._v(": () -> "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Double"),e("OutboundLink")],1),t._v("?   "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/changeHeight/#/PointingToDeclaration/"}},[t._v("changeHeight")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("change The Height of all Walls in the structure to the given Value. Random possible with random(min,max). Default: null"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/changeHeight/#/PointingToDeclaration/"}},[t._v("changeHeight")]),t._v(": () -> "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Double"),e("OutboundLink")],1),t._v("?   "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/changeWidth/#/PointingToDeclaration/"}},[t._v("changeWidth")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("change the Width of all Walls in the structure to the given Value. Random possible with random(min,max). Default: null"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/changeWidth/#/PointingToDeclaration/"}},[t._v("changeWidth")]),t._v(": () -> "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Double"),e("OutboundLink")],1),t._v("?   "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/changeX/#/PointingToDeclaration/"}},[t._v("changeX")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("change The StartRow of all Walls in the structure to the given Value. Random possible with random(min,max). Default: null"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/changeX/#/PointingToDeclaration/"}},[t._v("changeX")]),t._v(": () -> "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Double"),e("OutboundLink")],1),t._v("?   "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/changeY/#/PointingToDeclaration/"}},[t._v("changeY")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("change The StartHeight of all Walls in the structure to the given Value. Random possible with random(min,max). Default: null"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/changeY/#/PointingToDeclaration/"}},[t._v("changeY")]),t._v(": () -> "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Double"),e("OutboundLink")],1),t._v("?   "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/changeZ/#/PointingToDeclaration/"}},[t._v("changeZ")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("change The StartTime of all Walls in the structure to the given Value. Random possible with random(min,max). Default: null"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/changeZ/#/PointingToDeclaration/"}},[t._v("changeZ")]),t._v(": () -> "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Double"),e("OutboundLink")],1),t._v("?   "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/color/#/PointingToDeclaration/"}},[t._v("color")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("The Color of the Wallstructure. Supports various functions."),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/color/#/PointingToDeclaration/"}},[t._v("color")]),t._v(": () -> "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure.bwElements/-color/"}},[t._v("Color")]),t._v("?   "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/colorAlpha/#/PointingToDeclaration/"}},[t._v("colorAlpha")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("overwrites the alpha values of the colors. applied after the normal color property"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/colorAlpha/#/PointingToDeclaration/"}},[t._v("colorAlpha")]),t._v(": () -> "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Double"),e("OutboundLink")],1),t._v("?   "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/fake/#/PointingToDeclaration/"}},[t._v("fake")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("When true, causes the note/wall to not show up in the note/wall count and to not count towards score in any way Part of NE: https://github.com/Aeroluna/NoodleExtensions/blob/master/README.md"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/fake/#/PointingToDeclaration/"}},[t._v("fake")]),t._v(": "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Boolean"),e("OutboundLink")],1),t._v(" "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/gravity/#/PointingToDeclaration/"}},[t._v("gravity")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("When false, notes will no longer do their animation where they float up. Part of NE: https://github.com/Aeroluna/NoodleExtensions/blob/master/README.md Opposite of original value, default: true"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/gravity/#/PointingToDeclaration/"}},[t._v("gravity")]),t._v(": "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Boolean"),e("OutboundLink")],1),t._v(" "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/interactable/#/PointingToDeclaration/"}},[t._v("interactable")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("When false, the note/wall cannot be interacted with. This means notes cannot be cut and walls will not interact with sabers/putting your head in the wall. Notes will still count towards your score. Part of NE: https://github.com/Aeroluna/NoodleExtensions/blob/master/README.md"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/interactable/#/PointingToDeclaration/"}},[t._v("interactable")]),t._v(": "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Boolean"),e("OutboundLink")],1),t._v(" "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/localRotX/#/PointingToDeclaration/"}},[t._v("localRotX")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("localRotX controls the rotation on the x-axis for each individual wall in degree. allows random. Default: 0 NOTE: the position translation to NE is currently broken. Use with care"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/localRotX/#/PointingToDeclaration/"}},[t._v("localRotX")]),t._v(": () -> "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Double"),e("OutboundLink")],1),t._v(" "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/localRotY/#/PointingToDeclaration/"}},[t._v("localRotY")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("localRotY controls the rotation on the y-axis for each individual Wall in degree. allows random. Default: 0 NOTE: the position translation to NE is currently broken. Use with care"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/localRotY/#/PointingToDeclaration/"}},[t._v("localRotY")]),t._v(": () -> "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Double"),e("OutboundLink")],1),t._v(" "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/localRotZ/#/PointingToDeclaration/"}},[t._v("localRotZ")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("ul",[e("li",[t._v("localRotZ controls the rotation on the x-axis for each individual Wall in degree. allows random. Default: 0")])]),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/localRotZ/#/PointingToDeclaration/"}},[t._v("localRotZ")]),t._v(": () -> "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Double"),e("OutboundLink")],1),t._v(" "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/mirrorRotation/#/PointingToDeclaration/"}},[t._v("mirrorRotation")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("Defines, if mirror also effects the rotation. Can be true or false. Default: true"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/mirrorRotation/#/PointingToDeclaration/"}},[t._v("mirrorRotation")]),t._v(": "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Boolean"),e("OutboundLink")],1),t._v(" "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/noteJumpMovementSpeed/#/PointingToDeclaration/"}},[t._v("noteJumpMovementSpeed")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("Set the NJS of all walls. Part of NE: https://github.com/Aeroluna/NoodleExtensions/blob/master/README.md"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/noteJumpMovementSpeed/#/PointingToDeclaration/"}},[t._v("noteJumpMovementSpeed")]),t._v(": () -> "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Double"),e("OutboundLink")],1),t._v("?   "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/noteJumpStartBeatOffset/#/PointingToDeclaration/"}},[t._v("noteJumpStartBeatOffset")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("Set the spawn offset of an individual object Part of NE: https://github.com/Aeroluna/NoodleExtensions/blob/master/README.md"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/noteJumpStartBeatOffset/#/PointingToDeclaration/"}},[t._v("noteJumpStartBeatOffset")]),t._v(": () -> "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Double"),e("OutboundLink")],1),t._v("?   "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/repeat/#/PointingToDeclaration/"}},[t._v("repeat")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),e("br"),e("br"),t._v("Repeats the Structure c times. You can change variables supporting repeat by using the variable 'c' in your expressions"),e("br"),e("br"),e("br"),e("br"),t._v("beat: 10 + r"),e("br"),e("br"),e("br"),e("br"),t._v("override var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/repeat/#/PointingToDeclaration/"}},[t._v("repeat")]),t._v(": () -> "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Int"),e("OutboundLink")],1),t._v(" "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/rotationX/#/PointingToDeclaration/"}},[t._v("rotationX")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("The rotation of the wallstructure around the player, think 360 maps around the X Achsis. Other interesting Properties: mirrorRotation -> controls if mirror also effects the rotation(true,false)"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/rotationX/#/PointingToDeclaration/"}},[t._v("rotationX")]),t._v(": () -> "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Double"),e("OutboundLink")],1),t._v(" "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/rotationY/#/PointingToDeclaration/"}},[t._v("rotationY")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("The rotation of the wallstructure around the player, think 360 maps around the X Achsis. Other interesting Properties: mirrorRotation -> controls if mirror also effects the rotation(true,false)"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/rotationY/#/PointingToDeclaration/"}},[t._v("rotationY")]),t._v(": () -> "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Double"),e("OutboundLink")],1),t._v(" "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/rotationZ/#/PointingToDeclaration/"}},[t._v("rotationZ")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("The rotation of the wallstructure around the player, think 360 maps around the X Achsis. Other interesting Properties: mirrorRotation -> controls if mirror also effects the rotation(true,false)"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/rotationZ/#/PointingToDeclaration/"}},[t._v("rotationZ")]),t._v(": () -> "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Double"),e("OutboundLink")],1),t._v(" "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/scaleDuration/#/PointingToDeclaration/"}},[t._v("scaleDuration")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("multiplies the Duration of all Walls in the structure by the given Value. Random possible with random(min,max). Default: null (does nothing)"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/scaleDuration/#/PointingToDeclaration/"}},[t._v("scaleDuration")]),t._v(": () -> "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Double"),e("OutboundLink")],1),t._v(" "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/scaleHeight/#/PointingToDeclaration/"}},[t._v("scaleHeight")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("multiplies the Height of all Walls in the structure by the given Value. Random possible with random(min,max). Default: null (does nothing)"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/scaleHeight/#/PointingToDeclaration/"}},[t._v("scaleHeight")]),t._v(": () -> "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Double"),e("OutboundLink")],1),t._v(" "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/scaleWidth/#/PointingToDeclaration/"}},[t._v("scaleWidth")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("multiplies the Width of all Walls in the structure by the given Value. Random possible with random(min,max). Default: null (does nothing)"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/scaleWidth/#/PointingToDeclaration/"}},[t._v("scaleWidth")]),t._v(": () -> "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Double"),e("OutboundLink")],1),t._v(" "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/scaleX/#/PointingToDeclaration/"}},[t._v("scaleX")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("multiplies the StartRow of all Walls in the structure by the given Value. Random possible with random(min,max). Default: null (does nothing)"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/scaleX/#/PointingToDeclaration/"}},[t._v("scaleX")]),t._v(": () -> "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Double"),e("OutboundLink")],1),t._v(" "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/scaleY/#/PointingToDeclaration/"}},[t._v("scaleY")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("multiplies the StartHeight of all Walls in the structure by the given Value. Random possible with random(min,max). Default: null (does nothing)"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/scaleY/#/PointingToDeclaration/"}},[t._v("scaleY")]),t._v(": () -> "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Double"),e("OutboundLink")],1),t._v(" "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/scaleZ/#/PointingToDeclaration/"}},[t._v("scaleZ")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("multiplies the StartTime of all Walls in the structure by the given Value. Random possible with random(min,max). Default: null (does nothing)"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/scaleZ/#/PointingToDeclaration/"}},[t._v("scaleZ")]),t._v(": () -> "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-double/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Double"),e("OutboundLink")],1),t._v(" "),e("br")],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/track/#/PointingToDeclaration/"}},[t._v("track")])],1),t._v(" "),e("td",[t._v("[JVM] "),e("br"),e("br"),t._v("Assign all Objects in this Wallstructure to a specific Track"),e("br"),e("br"),t._v("var "),e("RouterLink",{attrs:{to:"/reference/beatwalls/structure/-object-structure/#structure/ObjectStructure/track/#/PointingToDeclaration/"}},[t._v("track")]),t._v(": "),e("a",{attrs:{href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("String"),e("OutboundLink")],1),t._v("?   "),e("br")],1)])])]),t._v(" "),e("h2",{attrs:{id:"inheritors"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#inheritors"}},[t._v("#")]),t._v(" Inheritors")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure.wallStructures/-wall-structure/"}},[t._v("WallStructure")])],1)]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/reference/beatwalls/structure.wallStructures/-wall-structure-field/"}},[t._v("WallStructureField")])],1)])])])])}),[],!1,null,null,null);r.default=a.exports}}]);